<?xml version="1.0" encoding="UTF-8"?>

<!--DOCTYPE syntax SYSTEM "syntax.dtd"-->

<syntax xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:noNamespaceSchemaLocation="syntaxSchema.xsd"
        name="number_syntax_1" version="1">

  <!-- simple elements
    The rule identified by the key "SIMPLES" is mandatory to get the basic blocks of the expression.
  -->
  <read>
    <rule key="SIMPLES">
      <pattern><![CDATA[PGCD|SQR]]>
        <type name="func"></type>
      </pattern>
      <pattern><![CDATA[\d+\.\d+]]>
        <type name="positive" subtypes="natural,var"></type>
      </pattern>
      <pattern><![CDATA[[mnop]'*|\d+]]>
        <type name="natural" subtypes="var"></type>
      </pattern>
      <pattern><![CDATA[[abcdtuvwxyz]'*]]>
        <type name="real" subtypes="positive,integer"></type>
      </pattern>
      <pattern><![CDATA[[ijkl]'*]]>
        <type name="integer" subtypes="natural"></type>
      </pattern>
      <pattern><![CDATA[[A-Z]]]>
        <type name="var"></type>
      </pattern>
    </rule>    
    <!-- composites elements by decreasing priority -->    
    <rule key="PGCD" child="f,a,b">
      <pattern><![CDATA[f\(a,b\)]]>
        <type name="natural" value="func,natural,natural"></type>
      </pattern>
    </rule>
    <rule key="SQR" child="f,x">
      <pattern><![CDATA[f\(x\)]]>
        <type name="positive" value="func,positive"></type>
      </pattern>
    </rule>
    <rule key="SEQ" child="s,n">
      <pattern node="SEQ:list"  flatten="SEQ:list"><![CDATA[s,n]]>
        <type name="list" value="real"></type>
        <type name="list" value="list,real"></type>
      </pattern>
    </rule>
    <rule key="GROUP" child="a">
      <pattern node="ABS:func"><![CDATA[\|a\|]]>
        <type name="natural" value="integer"></type>
        <type name="positive" value="real"></type>
      </pattern>
      <pattern><![CDATA[\(a\)]]>
        <type name="inherit"  value="natural|integer|positive|real"></type>
      </pattern>
    </rule>
    <rule key="POW" child="a,n"><![CDATA[(?!\()]]>
      <pattern node="POW:func"><![CDATA[a\^n]]>
        <type name="natural" value="natural"></type>
        <type name="integer" value="integer,natural"></type>
        <type name="real" value="real"></type>
      </pattern>
    </rule>
    <rule key="PROD_FAMILY" child="a,b"><![CDATA[(?!(\(|\^))]]>
      <pattern node="MUL:func"><![CDATA[a[\*×]b|ab]]>
        <type name="inherit"  value="natural|integer|positive|real"></type>
      </pattern>
      <pattern node="DIV:func"><![CDATA[a/b]]>
        <type name="real" value="real"></type>
      </pattern>
    </rule>
    <rule key="ADD_FAMILY" child="a,b"><![CDATA[(?!(\(|\*|×|\^))]]>
      <pattern node="ADD:func"><![CDATA[a\+b]]>
        <type name="inherit"  value="natural|integer|positive|real"></type>
      </pattern>
      <pattern node="SUB:func"><![CDATA[a-b]]> 
        <type name="inherit"  value="integer|real"></type>
      </pattern>
    </rule>
  </read>
  
  
  <!-- sortie standard -->
  <write>
  <wrule node="ABS:func" child="a"><![CDATA[|a|]]>
  </wrule>
  <wrule  node="POW:func" child="a,n"><![CDATA[a^n]]>
    <child replace="a->(a)" rules="MUL:func,DIV:func,ADD:func,SUB:func"></child>
    <child replace="n->(n)" rules="POW:func,MUL:func,DIV:func,ADD:func,SUB:func"></child>
  </wrule>
  <wrule node="MUL:func" child="a,b"><![CDATA[a×b]]>
    <child replace="a->(a)" rules="ADD:func,SUB:func"></child>
    <child replace="b->(b)" rules="ADD:func,SUB:func,MUL:func,DIV:func"></child>
  </wrule>
  <wrule node="DIV:func" child="a,b"><![CDATA[a/b]]>
    <child replace="a->(a)" rules="ADD:func,SUB:func"></child>
    <child replace="b->(b)" rules="ADD:func,SUB:func,MUL:func,DIV:func"></child>
  </wrule>
  <wrule node="ADD:func" child="a,b"><![CDATA[a+b]]>
    <child replace="b->(b)" rules="ADD:func,SUB:func"></child>
  </wrule>
  <wrule node="SUB:func" child="a,b"><![CDATA[a-b]]>
    <child replace="b->(b)" rules="ADD:func,SUB:func"></child>
  </wrule>
  <wrule node="PGCD:func" child="a,b"><![CDATA[PGCD(a,b)]]></wrule>
  <wrule node="SQR:func" child="x"><![CDATA[SQR(x)]]></wrule>
</write>
</syntax>
